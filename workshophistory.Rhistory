library(devtools)
library(testthat)
use_mit_license()
use_mit_license()
check()
check()
use_pipe()
document()
use_r("say")
use_r("phrases")
load_all()
say()
say("RLadies Calgary!")
document()
?say()
?phrases()
use_readme_rmd()
install()
use_vignette("ohwhaley")
build_vignettes()
build_vignettes()
build_vignettes()
browseVignettes("ohwhaley")
build_vignettes()
browseVignettes("ohwhaley")
document()
browseVignettes("ohwhaley")
vignette("ohwhaley")
use_testthat()
use_test()
use_test("say")
say() %>% length()
test_that("Output is of correct format",{
expect_length(say(), 0) #Returns something with a length of 0
expect_null(say()) #Returns null
expect_invisible(say()) #Returns invisibly
expect_message(say()) #Returns a message
})
check()
test_that("Output is of correct format",{
expect_length(say(), 0) #Returns something with a length of 0
expect_null(say()) #Returns null
expect_invisible(say()) #Returns invisibly
expect_message(say()) #Returns a message
})
test_that("Output is of correct format",{
expect_length(say(), 0) #Returns something with a length of 0
expect_null(say()) #Returns null
expect_invisible(say()) #Returns invisibly
expect_message(say()) #Returns a message
})
install(build_vignettes = TRUE)
library(ohwhaley)
say()
check()
say("Thank you for inviting me RLadies Calgary!!!")
savehistory("~/Dropbox/R/RLadiesCAL_Rpkg/Untitled.Rhistory")
